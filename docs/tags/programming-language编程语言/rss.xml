<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming-language(编程语言) on 帕里特档案馆</title><link>/tags/programming-language%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link><description>Recent content in programming-language(编程语言) on 帕里特档案馆</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 29 Jul 2023 08:00:00 +0800</lastBuildDate><atom:link href="/tags/programming-language%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/rss.xml" rel="self" type="application/rss+xml"/><item><title>浮点数（笔记片段）</title><link>/post/computer-science/programming-language/assembly/%E6%B5%AE%E7%82%B9%E6%95%B0/</link><pubDate>Sat, 29 Jul 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/assembly/%E6%B5%AE%E7%82%B9%E6%95%B0/</guid><description>x87 浮点数；移动数据；四则运算；浮点数比较；四舍五入；绝对值；取反；三角函数；</description></item><item><title>函数和库（笔记片段）</title><link>/post/computer-science/programming-language/assembly/%E5%87%BD%E6%95%B0%E5%92%8C%E5%BA%93/</link><pubDate>Mon, 24 Jul 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/assembly/%E5%87%BD%E6%95%B0%E5%92%8C%E5%BA%93/</guid><description>函数；函数的参数；函数的约定；函数里怎么调用函数；系统调用；怎么调用 c 库函数； 怎么传递和返回数组参数；怎么传递和返回结构体参数；命令行参数和环境变量；静态库和动态库；</description></item><item><title>字符串（笔记片段）</title><link>/post/computer-science/programming-language/assembly/%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Thu, 20 Jul 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/assembly/%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>字符串传输；字符串比较；</description></item><item><title>整数的运算（笔记片段）</title><link>/post/computer-science/programming-language/assembly/%E6%95%B4%E6%95%B0/</link><pubDate>Sat, 15 Jul 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/assembly/%E6%95%B4%E6%95%B0/</guid><description>四则运算；自增自减；逻辑运算；位移运算；</description></item><item><title>移动数据和流程控制（笔记片段）</title><link>/post/computer-science/programming-language/assembly/%E7%A7%BB%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</link><pubDate>Wed, 12 Jul 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/assembly/%E7%A7%BB%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</guid><description>移动数据；间接寻址；无条件跳转；分支结构；循环结构；有条件的指令；</description></item><item><title>intel x86-64 架构（笔记片段）</title><link>/post/computer-science/programming-language/assembly/x86-64_%E6%9E%B6%E6%9E%84/</link><pubDate>Tue, 11 Jul 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/assembly/x86-64_%E6%9E%B6%E6%9E%84/</guid><description>intel cpu 架构文档；intel x86-64 架构； 寄存器；数据类型；原码、反码、补码；数据的范围；数据扩展；指令； hello world；编译、链接、调试；</description></item><item><title>Golang 反射的基本使用方式</title><link>/post/computer-science/programming-language/golang/reflect/</link><pubDate>Mon, 22 May 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/reflect/</guid><description>反射的基本使用方式；</description></item><item><title>Golang 实现简单的自定义 RPC 协议</title><link>/post/computer-science/programming-language/golang/rpc/</link><pubDate>Mon, 22 May 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/rpc/</guid><description>RPC 有几块；这几块是怎么工作的；一次 RPC 调用的大概过程；RPC 大概的实现思路；</description></item><item><title>使用 gomock 工具进行单元测试</title><link>/post/computer-science/programming-language/golang/mockgen/</link><pubDate>Mon, 24 Apr 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/mockgen/</guid><description>gomock 工具的安装和使用；</description></item><item><title>【实验性质，带图片】Golang 实现简单的 Web 框架 -- middleware(中间件)</title><link>/post/computer-science/programming-language/framework/web/golang/middleware_v4/</link><pubDate>Sun, 12 Mar 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/web/golang/middleware_v4/</guid><description>中间件是什么；</description></item><item><title>【实验性质，带图片】Golang 实现简单的 Web 框架 -- router(路由)</title><link>/post/computer-science/programming-language/framework/web/golang/router_v4/</link><pubDate>Sun, 12 Mar 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/web/golang/router_v4/</guid><description>Web 框架是什么；路由是什么；路由树是怎么来的；</description></item><item><title>Golang 实现简单的 Web 框架 -- middleware(中间件)</title><link>/post/computer-science/programming-language/framework/web/golang/middleware_v2/</link><pubDate>Sat, 11 Feb 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/web/golang/middleware_v2/</guid><description>中间件是什么；</description></item><item><title>Golang 实现简单的 Web 框架 -- router(路由)</title><link>/post/computer-science/programming-language/framework/web/golang/router_v2/</link><pubDate>Thu, 09 Feb 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/web/golang/router_v2/</guid><description>Web 框架是什么；路由是什么；路由树是怎么来的；</description></item><item><title>队列（Golang 实现）</title><link>/post/computer-science/programming-language/golang/queue/</link><pubDate>Sun, 29 Jan 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/queue/</guid><description>并发安全队列；优先队列；延迟队列；</description></item><item><title>Golang 的 context 包的使用</title><link>/post/computer-science/programming-language/golang/context/</link><pubDate>Sun, 15 Jan 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/context/</guid><description>context.Background()，context.WithValue()，context.WithCancel()，context.WithDeadline()，context.WithTimeout()</description></item><item><title>Golang 的 sync 包的使用</title><link>/post/computer-science/programming-language/golang/sync/</link><pubDate>Sat, 14 Jan 2023 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/sync/</guid><description>sync.Mutex，sync.RWMutex，sync.Cond，WaitGroup</description></item><item><title>Golang 实现简单的 ORM 框架 -- 其他辅助工具</title><link>/post/computer-science/programming-language/framework/orm/golang/middleware/</link><pubDate>Mon, 21 Nov 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/orm/golang/middleware/</guid><description>中间件的原理和实现方式。</description></item><item><title>Golang 实现简单的 ORM 框架 -- INSERT、UPDATE、DELETE</title><link>/post/computer-science/programming-language/framework/orm/golang/insert_update_delete/</link><pubDate>Mon, 14 Nov 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/orm/golang/insert_update_delete/</guid><description>使用 Builder 设计模式构建 MySQL 的 INSERT、UPDATE、DELETE 语句的过程、不同数据库 INSERT 语句不一样的问题的处理方式。</description></item><item><title>Golang 实现简单的 ORM 框架 -- SELECT</title><link>/post/computer-science/programming-language/framework/orm/golang/select/</link><pubDate>Fri, 11 Nov 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/orm/golang/select/</guid><description>使用 Builder 设计模式构建 MySQL 的 SELECT 语句的过程、元数据的构造、结果集的处理。</description></item><item><title>符号命名</title><link>/post/computer-science/programming-language/symbol_naming/</link><pubDate>Mon, 07 Nov 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/symbol_naming/</guid><description>关于我的个人项目中的符号命名规则；</description></item><item><title>【过期，留做对比】Golang 实现复杂的 Web 框架</title><link>/post/computer-science/programming-language/framework/web/golang/complex/</link><pubDate>Sat, 24 Sep 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/framework/web/golang/complex/</guid><description>使用 net/http 包，实现一个复杂的 Web 框架。</description></item><item><title>Golang 开启 HTTP 服务</title><link>/post/computer-science/programming-language/golang/http/</link><pubDate>Sat, 03 Sep 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/http/</guid><description>几种使用 net/http 包或者 net 包开启 HTTP 服务的方法。</description></item><item><title>在 Go 项目中使用 Protocol Buffers</title><link>/post/computer-science/programming-language/golang/protobuf/</link><pubDate>Sun, 12 Jun 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/protobuf/</guid><description>在 Go 项目中使用 Protocol Buffers</description></item><item><title>在 Linux 中配置 Golang 开发环境</title><link>/post/computer-science/programming-language/golang/linux/</link><pubDate>Sun, 12 Jun 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/linux/</guid><description>在 Linux 中配置 Golang 开发环境</description></item><item><title>error</title><link>/post/computer-science/programming-language/golang/error/</link><pubDate>Mon, 16 May 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/error/</guid><description>error</description></item><item><title>goroutine</title><link>/post/computer-science/programming-language/golang/goroutine/</link><pubDate>Mon, 16 May 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/goroutine/</guid><description>goroutine</description></item><item><title>在 Windows 11 中，配置 C 语言开发环境</title><link>/post/computer-science/programming-language/c/windows/</link><pubDate>Mon, 09 May 2022 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/c/windows/</guid><description>在 Windows 11 中，配置 C 语言开发环境</description></item><item><title>在 Windows 11 中，配置 Golang 开发环境</title><link>/post/computer-science/programming-language/golang/windows/</link><pubDate>Wed, 17 Nov 2021 08:00:00 +0800</pubDate><guid>/post/computer-science/programming-language/golang/windows/</guid><description>在 Windows 11 中，配置 Golang 开发环境</description></item></channel></rss>